Different Ways of Creating a Servlet
------------------------------------
1. Servlet(I)
2. GenericServlet(AC)
3. HttpServlet(AC)

Dynamic response will be generated by Servlet.
Mapping a resource to a particular url-pattern for the web container can be configured in 2 ways:
	1. XML (legacy approach)
	2. Annotation (available from Servlet3.0v)
**Note:
	User input will be sent in the form of QueryString from the browser to protocol, & container will store in Request Object.

ServletRequest(I)
	|extends
HttpServletRequest(I)

HttpRequest Structure
	a. RequestLine (request type, resourcename, protocolversion)
	b. RequestHeader (info about the browser)
	c. RequestBody (actual data(QueryString))

Methods
	public abstract Enumeration<String> getHeaderNames();
	public abstract String getHeader(String keyName);

	refer: RequestHeaderApp

Working With ServletResponse/HttpServletResponse
------------------------------------------------
1. public abstract PrintWriter getWriter() throws IOException;
	To send character type of Response
2. to send binary info like videos, audio, images, etc, response will be through "Stream".
	public abstract ServletOutputStream getOutputStream() throws IOException;
		refer: ResponseInfoApp
**Note:
	PrintWriter-->>only character type of data.
	ServletOutputStream-->>we can send both character & binary types of data.

In a single app, can we use both PrintWriter Object & ServletOutputStream to send the response?
	Not possible, it'd result in "java.lang.IllegalStateException: getWriter() has already been called for this response".

MultiThreading Technology Used in Servlet
-----------------------------------------

ServletContext(I) vs Servlet(I)
-------------------------------

	ServletConfig(I)
	----------------
		1. Loading -->> static block
		2. Instantiation -->> Object obj = Class.forName(String urlPattern).newInstance();
			Object will be created for the loaded class using Zero paramterized constructor.
		3. Initialization -->> For the created Servlet Object, we can initialize the value using init(ServerConfig config)

	ServletConfig
	-------------
		This Object will be used to initialize the values for the loaded servlet.
	How to initialize the value of ServletConfig Object?
		We need to configure the container.
	Container can be configured in 2 ways:
		a. XML
web.xml
-------
<servlet>
	<servlet-name>InitializationParamterApp</servlet-name>
		<servlet-class>in.ineuron.controller.InitializationParamterApp</servletclass>
	<init-param>
 		<param-name>name</param-name>
		<param-value>sachin</param-value>
 	</init-param>
	<init-param>
 		<param-name>age</param-name>
 		<param-value>49</param-value>
	</init-param>
	<init-param>
 		<param-name>address</param-name>
 		<param-value>MI</param-value>
	</init-param>
</servlet>

Methods
-------
	public Enumeration<String> getInitParameterNames();
	public String getInitParameter(String key); 
		refer: ServletConfigApp
**Note:
	ServletConfig object is unique w.r.t every Servlet.
	ServletConfig object stores the data in the form of Key,Value pair.
	Assume we want the dbconfiguration details for a servlet like:
		url -->> jdbc:mysql:///octbatch
		username -->> root
		password -->> root123
After adding the jar, jars will available to jdk s/w configure for Eclipse, not for Tomcat Server.
To make those jars available for Tomcat S erver(Catalina Container), we need to put in deployment assembly (/WEB-INF/lib)
	refer: ServletDBCommunication


Assignment
==========
Create a html form with fields like name,age,address for student
a. perform insertion operation(use db credentials in config object)




















